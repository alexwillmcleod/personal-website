---
import Picture from 'astro/components/Picture.astro';
import type Article from '../../interfaces/article';
import fetchApi from '../../lib/strapi';
import { Markdown } from '@astropub/md';
import { Image, getImage } from 'astro:assets';
import BaseHead from '../../components/BaseHead.astro';
import Layout from '../../layouts/layout.astro';

export async function getStaticPaths() {
  const articles: Article[] = await fetchApi<Article[]>({
    endpoint: 'articles',
    wrappedByKey: 'data'
  });

  return articles.map((article) => ({
    params: {
      slug: article.attributes.slug
    },
    props: article
  }));
	
}
type Props = Article;

const article = Astro.props;

const coverImageURL: string | undefined = article.attributes.image?.data.attributes.url;
---
<Layout title={article.attributes.title}>

    <main class="w-full px-10 flex-col flex gap-8">
      <!-- <img src={import.meta.env.STRAPI_URL + article.attributes.image.data.attributes.url} /> -->
     
      {coverImageURL && <Picture width={1080} inferSize decoding="async" class="w-full rounded-xl object-cover h-96" src={coverImageURL} alt={article.attributes.title}/>}
      <div class="w-full flex flex-row justify-between">
        <h1 class="font-display font-black text-display text-3xl w-1/2">{article.attributes.title}</h1>
        <h3 class="font-display text-display text-xl">{new Date(article.attributes.publishedAt).toDateString()}</h3>
      </div>
      <!-- Render markdown -->
      <div class="text-lg">
        <Markdown of={article.attributes.content} />
      </div>
    </main>
</Layout>